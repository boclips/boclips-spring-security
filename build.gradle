buildscript {
    ext {
        kotlinVersion = '1.3.10'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}

plugins {
    id 'org.owasp.dependencycheck' version '4.0.2'
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'org.owasp.dependencycheck'

group 'com.boclips'
version '0.0.1'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

test {
    useJUnitPlatform()
}

def junitVersion = "5.3.1"

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile('org.keycloak:keycloak-spring-security-adapter:4.5.0.Final')
    compile("com.fasterxml.jackson.core:jackson-databind:2.9.8")
    compile("org.bouncycastle:bcprov-jdk15on:1.60")

    compileOnly('org.springframework.security:spring-security-config:5.1.1.RELEASE')
    compileOnly('org.springframework.security:spring-security-web:5.1.1.RELEASE')

    testCompile('org.springframework.security:spring-security-core:5.1.1.RELEASE')
    testCompile('org.springframework.security:spring-security-config:5.1.1.RELEASE')
    testCompile('org.springframework.security:spring-security-web:5.1.1.RELEASE')
    testCompile("org.springframework.boot:spring-boot-starter-test:2.1.0.RELEASE") {
        exclude module: ['junit', 'mockito-core']
    }
    testCompile("com.nhaarman:mockito-kotlin:1.5.0")
    testCompile("org.junit.jupiter:junit-jupiter-api:$junitVersion")
    testCompile("org.junit.jupiter:junit-jupiter-engine:$junitVersion")
    testCompile("org.junit.jupiter:junit-jupiter-params:$junitVersion")
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

dependencyCheck {
    failBuildOnCVSS = 7 // Fail on high severity or greater

    data {
        directory='./dependency-check-cache'
    }

    analyzers {
        assemblyEnabled = false
    }
}
